name: Check Milestone Before Merge

on:
  workflow_dispatch:
    inputs:
      pull_request_number:
        description: 'The pull request number to process'
        required: true
        type: string
  pull_request:
    types: [opened, reopened, edited, synchronize, milestoned, demilestoned]

jobs:
  check-milestone:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check if the base branch is master or release/*
      id: check_base_branch
      run: |
        echo "run_workflow=true" >> $GITHUB_OUTPUT
        
    - name: Get PR number
      if: steps.check_base_branch.outputs.run_workflow == 'true'
      id: get_pr_number
      uses: actions/github-script@v6
      with:
        script: |
          const branchName = context.ref.replace('refs/heads/', '');
          const { data: pullRequests } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
          });
          const matchingPR = pullRequests.find(pr => pr.head.ref === branchName);
          if (matchingPR) {
            console.log(`PR number found: ${matchingPR.number}`);
            console.log(`PR_NUMBER=${matchingPR.number} >> $GITHUB_ENV`);
          } else {
            console.log(`No PR found for branch ${branchName}`);
            console.log(`PR_NUMBER= >> $GITHUB_ENV`);
          }

    - name: Get milestone version
      if: steps.check_base_branch.outputs.run_workflow == 'true'
      id: get_milestone_version
      run: |
        MILESTONE_VERSION=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.PR_NUMBER }}" | jq -r .milestone.title)
        echo "MILESTONE_VERSION=$MILESTONE_VERSION" >> $GITHUB_ENV
        
    - name: Get product version
      if: steps.check_base_branch.outputs.run_workflow == 'true'
      id: get_product_version
      run: |
        PRODUCT_VERSION="v"$(sed -n '/MARKETING_VERSION/{s/MARKETING_VERSION = //;s/;//;s/^[[:space:]]*//;p;q;}' project.pbxproj)
        echo "PRODUCT_VERSION=$PRODUCT_VERSION" >> $GITHUB_ENV
        
    - name: Compare versions
      if: steps.check_base_branch.outputs.run_workflow == 'true'
      id: compare_versions
      run: |
        MILESTONE_VER=${{ env.MILESTONE_VERSION }}
        PRODUCT_VER=${{ env.PRODUCT_VERSION }}
        php -r 'if(version_compare("'"$MILESTONE_VER"'", "'"$PRODUCT_VER"'", "==")) { exit(0); }; exit(1);'
      shell: bash
