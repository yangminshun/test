name: Create Pre-merge PR

on:
  push:
    branches:
    - release/v*

jobs:
  create-pre-merge-pr:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Checkout repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Check if there is the difference between master and release branch
      - name: Check if there is the difference
        id: check_difference
        run: |
          branch_name=$(echo ${GITHUB_REF#refs/heads/})
          diff_files=$(git diff ${branch_name} --name-only)
          if [ -n ${diff_files} ]; then
            echo "has_difference=true" >> $GITHUB_OUTPUT
          else
            echo "has_difference=false" >> $GITHUB_OUTPUT
          fi

      # Create the branch for pre-merge (branch: pre-merge/vx.x.x-xxxxx)
      - name: Create the branch
        if: steps.check_difference.outputs.has_difference == 'true'
        id: create_branch
        run: |
          branch_name=$(echo ${GITHUB_REF#refs/heads/})
          git switch ${branch_name}

          latest_merged_pr_number=$(git log --merges \
            --pretty=format:%s \
            | grep 'Merge pull request' \
            | head -n 1 \
            | awk '{ print $4 }' \
            | sed -e 's/#//g')
          version_name=$(echo ${branch_name} | sed -e 's/release\///g')
          new_branch_name="pre-merge/${version_name}-${latest_merged_pr_number}"
          git switch -c ${new_branch_name}
          git push -u origin ${new_branch_name}

          echo "latest_merged_pr_number=${latest_merged_pr_number}" >> $GITHUB_OUTPUT
          echo "new_branch_name=${new_branch_name}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Check Pre-merge PR number
      - name: Check PR number
        if: steps.check_difference.outputs.has_difference == 'true'
        id: check_pr_number
        run: |
          pr_number=$(gh pr list \
            --base master \
            --head "${{ steps.create_branch.outputs.new_branch_name }}" \
            --json number \
            --jq '.[0].number')
          echo "pr_number=${pr_number}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create Pull Request if needed (title: Pre-merge #xxxxx to master)
      - name: Create Pull Request
        if: steps.check_difference.outputs.has_difference == 'true' && steps.check_pr_number.outputs.pr_number == ''
        id: create_pull_request
        run: |
          latest_pr_author=$(gh pr view ${{ steps.create_branch.outputs.latest_merged_pr_number }} \
            --json author \
            --jq '.author.login')

          gh pr create --base master \
            --head ${{ steps.create_branch.outputs.new_branch_name }} \
            --title "Pre-merge #${{ steps.create_branch.outputs.latest_merged_pr_number }} to master" \
            --body "- #${{ steps.create_branch.outputs.latest_merged_pr_number }}" \
            --reviewer ${latest_pr_author} \
            --reviewer fablicdev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Enable auto-merge
      - name: Enable auto-merge
        if: steps.check_difference.outputs.has_difference == 'true'
        run: |
          gh pr merge ${{ steps.create_branch.outputs.new_branch_name }} \
            --merge \
            --auto
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
