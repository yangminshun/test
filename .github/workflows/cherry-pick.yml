name: Cherry-Pick Bot

on:
  issues:
    types: [labeled]
  pull_request:
    types: [labeled]

permissions:
  contents: write

jobs:
  cherry-pick:
    runs-on: ubuntu-latest
    if: contains(github.event.label.name, 'cherry-pick-to-release')
    steps:
      - name: CCGG
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CCC }}

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Get the commit SHA
        run: echo "SHA=${{ github.event.pull_request.head.sha || github.event.issue.pull_request.head.sha }}" >> $GITHUB_ENV

      - name: Cherry-pick commit
        run: |
          git fetch origin +refs/heads/main:refs/remotes/origin/main
          git checkout main
          git checkout -b cherry-pick-branch
          git cherry-pick ${{ env.SHA }}
        env:
          token: ${{ secrets.CCC }}

      - name: Push changes
        run: |
          git push origin cherry-pick-branch

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.CCC }}
          branch: cherry-pick-branch
          title: 'Cherry-pick commit ${{ env.SHA }}'
          body: 'Automated cherry-pick of commit ${{ env.SHA }} to main'
          auto-merge: true  # Enables auto-merge for the created pull request
          merge-method: merge  # Specify the merge method (merge, squash, rebase)

      - name: Merge pull request
        run: |
          PR_NUMBER=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
          gh pr merge $PR_NUMBER --merge --admin --repo ${{ github.repository }}
        env:
          token: ${{ secrets.CCC }}
